name: Release to GHCR

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set SERVICE_VERSION tag / bump
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=$(git describe --tags --abbrev=0 | sed -E 's/^v([0-9]+)\.([0-9]+)\.([0-9]+)/echo \1.\2.$((\3 + 1))-pre/e')
          fi

          echo "version=$VERSION" >> $GITHUB_ENV
          echo "SERVICE_VERSION=$VERSION" >> $GITHUB_ENV

          MAJOR=$(echo "$VERSION" | cut -d . -f 1)
          MINOR=$(echo "$VERSION" | cut -d . -f 2)
          PATCH=$(echo "$VERSION" | cut -d . -f 3)
          
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV

          if [[ $VERSION != *-pre ]]; then
            PATCH=$(echo "$VERSION" | cut -d . -f 3)
            echo "version_patch=$PATCH" >> $GITHUB_ENV
          fi
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GH_TOKEN }}

      - name: Build and push Docker images
        run: |
          IMG="ghcr.io/${{ github.repository }}"
          IMG=${IMG@L}
          docker build \
            -f model-service/Dockerfile \
            --build-arg SERVICE_VERSION=${{ env.SERVICE_VERSION }} \
            --build-arg MODEL_URL=${{ secrets.MODEL_URL }} \
            --build-arg VECTORIZER_URL=${{ secrets.VECTORIZER_URL }} \
            --tag $IMG:${{ env.version }} \
            --tag $IMG:${{ env.version_major }}.${{ env.version_minor }}.latest \
            --tag $IMG:${{ env.version_major }}.latest \
            --tag $IMG:latest \
            .
          docker push --all-tags $IMG

          
          
